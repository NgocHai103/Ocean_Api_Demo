// <auto-generated />
using System;
using Infrastructure.Persistence.EF.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Persistence.EFCore.Migrations
{
    [DbContext(typeof(SeaDbContext))]
    [Migration("20241008090135_test1")]
    partial class test1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Sea.Domain.Entities.Sea.Request", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AssignedId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AssignedName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CategoryName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NumberPhone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("SubCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SubCategoryName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Requests");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ed9ad813-64eb-4676-ac00-11f9c0f9af39"),
                            AssignedId = new Guid("a45a5148-02b0-46a8-9d3e-e96ebfe1a729"),
                            AssignedName = "Jane Smith",
                            CategoryId = new Guid("8ceb3c1f-9cbc-4f5b-a98d-2850273d0acb"),
                            CategoryName = "General",
                            Code = "REQ001",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CustomerName = "John Doe",
                            IsActive = false,
                            IsDeleted = false,
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            NumberPhone = "1234567890",
                            Status = 0,
                            SubCategoryId = new Guid("5d9bfa48-f6b7-42b0-af34-a2cfc71dfdc0"),
                            SubCategoryName = "Sub General",
                            Title = "Initial Request 1",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("ab23ff93-31dd-46e8-a89a-c4a60ac4fca2"),
                            AssignedId = new Guid("893ea6b8-a229-4657-b5ba-7b0515fb32ea"),
                            AssignedName = "Bob Builder",
                            CategoryId = new Guid("72fef2df-d5be-4da3-803b-c6f58f5ff4b9"),
                            CategoryName = "Support",
                            Code = "REQ002",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CustomerName = "Alice Wonderland",
                            IsActive = false,
                            IsDeleted = false,
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            NumberPhone = "0987654321",
                            Status = 0,
                            SubCategoryId = new Guid("764bbad2-7c78-4ca4-af68-3df4952b0f1f"),
                            SubCategoryName = "Sub Support",
                            Title = "Initial Request 2",
                            Type = 0
                        });
                });

            modelBuilder.Entity("Sea.Domain.Entities.Sea.RequestHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AssigneeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AssigneeName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RequestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RequestId");

                    b.ToTable("RequestHistories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ed9ad813-64eb-4676-ac00-11f9c0ddaf39"),
                            AssigneeId = new Guid("026dc4a3-c551-45c0-abc7-5cd9576a5ab0"),
                            AssigneeName = "Jane Smith",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "Initial status assigned.",
                            IsActive = false,
                            IsDeleted = false,
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            RequestId = new Guid("ed9ad813-64eb-4676-ac00-11f9c0f9af39"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("ab23ff99-31dd-46e8-a89a-c4a60ac4fca2"),
                            AssigneeId = new Guid("59c2b667-deb0-49e0-bd73-796e7b5492ae"),
                            AssigneeName = "Bob Builder",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "Moved to in-progress status.",
                            IsActive = false,
                            IsDeleted = false,
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            RequestId = new Guid("ab23ff93-31dd-46e8-a89a-c4a60ac4fca2"),
                            Status = 2
                        });
                });

            modelBuilder.Entity("Sea.Domain.Entities.Sea.RequestHistory", b =>
                {
                    b.HasOne("Sea.Domain.Entities.Sea.Request", "Request")
                        .WithMany("RequestHistories")
                        .HasForeignKey("RequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Request");
                });

            modelBuilder.Entity("Sea.Domain.Entities.Sea.Request", b =>
                {
                    b.Navigation("RequestHistories");
                });
#pragma warning restore 612, 618
        }
    }
}
